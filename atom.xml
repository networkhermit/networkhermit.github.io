<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>hi, I’m vac</title>
    <link rel="self" type="application/atom+xml" href="https://blog.vac.fun/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://blog.vac.fun"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-12-27T00:00:00+00:00</updated>
    <id>https://blog.vac.fun/atom.xml</id>
    <entry xml:lang="en">
        <title>E.W.Dijkstra Archive: On the nature of Computing Science</title>
        <published>2024-12-27T00:00:00+00:00</published>
        <updated>2024-12-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.vac.fun/prism/20241227-dijkstra/"/>
        <id>https://blog.vac.fun/prism/20241227-dijkstra/</id>
        
        <content type="html" xml:base="https://blog.vac.fun/prism/20241227-dijkstra/">&lt;blockquote&gt;
&lt;p&gt;Simplicity is a great virtue but it requires hard work to achieve it and education to appreciate
it. And to make matters worse: complexity sells better.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cs.utexas.edu&#x2F;~EWD&#x2F;transcriptions&#x2F;EWD08xx&#x2F;EWD896.html&quot;&gt;Link&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Istio Blog: Scaling in the Clouds: Istio Ambient vs. Cilium</title>
        <published>2024-11-18T00:00:00+00:00</published>
        <updated>2024-11-18T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.vac.fun/prism/20241118-istio/"/>
        <id>https://blog.vac.fun/prism/20241118-istio/</id>
        
        <content type="html" xml:base="https://blog.vac.fun/prism/20241118-istio/">&lt;blockquote&gt;
&lt;p&gt;Despite offering a similar feature set on the surface, the two projects have substantially
different architectures, most notably Cilium’s use of eBPF and WireGuard for processing and
encrypting L4 traffic in the kernel, contrasted with Istio’s ztunnel component for L4 in user
space. These differences have resulted in substantial speculation about how Istio will perform at
scale compared to Cilium.&lt;&#x2F;p&gt;
&lt;p&gt;While many comparisons have been made about tenancy models, security protocols and basic
performance of the two projects, there has not yet been a full evaluation published at enterprise
scale. Rather than emphasizing theoretical performance, we put Istio’s ambient mode and Cilium
through their paces, focusing on key metrics like latency, throughput, and resource consumption.
We cranked up the pressure with realistic load scenarios, simulating a bustling Kubernetes
environment. Finally, we pushed the size of our AKS cluster up to 1,000 nodes on 11,000 cores, to
understand how these projects perform at scale. Our results show areas where each can improve, but
also indicate that Istio is the clear winner.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;behind-the-scenes-why-the-difference&quot;&gt;Behind the Scenes: Why the Difference?&lt;&#x2F;h2&gt;
&lt;p&gt;The key to understanding these performance differences lies in the architecture and design of each tool.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Cilium’s Control Plane Conundrum&lt;&#x2F;strong&gt;: Cilium runs a control plane instance on each node, leading to
API server strain and configuration overhead as your cluster expands. This frequently caused our
API server to crash, followed by Cilium becoming unready, and the entire cluster becoming
unresponsive.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Istio’s Efficiency Edge&lt;&#x2F;strong&gt;: Istio, with its centralized control plane and identity-based approach,
streamlines configuration and reduces the burden on your API server and nodes, directing
critical resources to processing and securing your traffic, rather than processing
configuration. Istio takes further advantage of the resources not used in the control plane by
running as many Envoy instances as a workload needs, while Cilium is limited to one shared Envoy
instance per node.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;digging-deeper&quot;&gt;Digging Deeper&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;hidden-costs&quot;&gt;Hidden Costs&lt;&#x2F;h3&gt;
&lt;p&gt;While Istio operates entirely in user space, Cilium’s L4 dataplane runs in the Linux kernel using
eBPF. Prometheus metrics for resource consumption only measure user space resources, meaning that
all kernel resources used by Cilium are not accounted for in this test.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;recommendations-choosing-the-right-tool-for-the-job&quot;&gt;Recommendations: Choosing the Right Tool for the Job&lt;&#x2F;h2&gt;
&lt;p&gt;So, what’s the verdict? Well, it depends on your specific needs and priorities. For small clusters
with pure L3&#x2F;L4 use cases and no requirement for encryption, Cilium offers a cost-effective and
performant solution. However, for larger clusters and a focus on stability, scalability, and
advanced features, Istio’s ambient mode, along with an alternate NetworkPolicy implementation, is
the way to go. Many customers choose to combine the L3&#x2F;L4 features of Cilium with the L4&#x2F;L7 and
encryption features of Istio for a defense-in-depth strategy.&lt;&#x2F;p&gt;
&lt;p&gt;Remember, the world of cloud-native networking is constantly evolving. Keep an eye on developments
in both Istio and Cilium, as they continue to improve and address these challenges.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;istio.io&#x2F;latest&#x2F;blog&#x2F;2024&#x2F;ambient-vs-cilium&#x2F;&quot;&gt;Link&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Pulumi Blog: From CDK to Pulumi: The Evolution of SST</title>
        <published>2024-10-19T00:00:00+00:00</published>
        <updated>2024-10-19T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.vac.fun/prism/20241019-pulumi/"/>
        <id>https://blog.vac.fun/prism/20241019-pulumi/</id>
        
        <content type="html" xml:base="https://blog.vac.fun/prism/20241019-pulumi/">&lt;blockquote&gt;
&lt;p&gt;SST was built on AWS CDK and CloudFormation. But after nearly 3 years of working with CDK and
CloudFormation we hit some of its underlying design flaws and were forced to look at alternatives.&lt;&#x2F;p&gt;
&lt;p&gt;Late last year we started work on a new deployment engine that would use Pulumi and Terraform, as
opposed to CDK and CloudFormation.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.pulumi.com&#x2F;blog&#x2F;from-cdk-pulumi-evolution-of-sst&quot;&gt;Link&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sst.dev&#x2F;blog&#x2F;moving-away-from-cdk&quot;&gt;Moving away from CDK&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sst.dev&#x2F;blog&#x2F;sst-v3&quot;&gt;SST v3&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Netflix Technology Blog: Investigation of a Cross-regional Network Performance Issue</title>
        <published>2024-08-31T00:00:00+00:00</published>
        <updated>2024-08-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.vac.fun/prism/20240831-netflixtechblog/"/>
        <id>https://blog.vac.fun/prism/20240831-netflixtechblog/</id>
        
        <content type="html" xml:base="https://blog.vac.fun/prism/20240831-netflixtechblog/">&lt;blockquote&gt;
&lt;p&gt;Simply put, &lt;strong&gt;the TCP receive window is how the receiver tells the sender “This is how many bytes
you can send me without me ACKing any of them”.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;In short, &lt;strong&gt;the receive window size halved after the kernel upgrade. Hence the throughput was cut in
half, causing the data transfer time to double.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;While it technically wasn’t the “network” to blame, this time it turned out the culprit was the
software components that make up the network (i.e. the TCP implementation in the kernel).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;netflixtechblog.com&#x2F;investigation-of-a-cross-regional-network-performance-issue-422d6218fdf1&quot;&gt;Link&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>ACM: Reflections on trusting trust</title>
        <published>2024-04-06T00:00:00+00:00</published>
        <updated>2024-04-06T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.vac.fun/prism/20240406-acm/"/>
        <id>https://blog.vac.fun/prism/20240406-acm/</id>
        
        <content type="html" xml:base="https://blog.vac.fun/prism/20240406-acm/">&lt;blockquote&gt;
&lt;p&gt;To what extent should one trust a statement that a program is free of Trojan horses? Perhaps it is
more important to trust the people who wrote the software.&lt;&#x2F;p&gt;
&lt;p&gt;— Ken Thompson&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;10.1145&#x2F;358198.358210&quot;&gt;Reflections on Trusting Trust&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.openwall.com&#x2F;lists&#x2F;oss-security&#x2F;2024&#x2F;03&#x2F;29&#x2F;4&quot;&gt;backdoor in upstream xz&#x2F;liblzma leading to ssh server compromise&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;research.swtch.com&#x2F;xz-timeline&quot;&gt;Timeline of the xz open source attack&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pducklin.com&#x2F;2024&#x2F;03&#x2F;30&#x2F;scary-ssh-backdoor-malware-in-linux-supply-chain-how-to-find-and-fix-it&#x2F;&quot;&gt;Scary SSH backdoor malware in Linux supply chain: How to find and fix it!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pducklin.com&#x2F;2024&#x2F;04&#x2F;10&#x2F;fallout-from-xz-ssh-supply-chain-attack-continues&#x2F;&quot;&gt;Fallout from XZ&#x2F;SSH supply chain attack continues&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Macbeth and Kafka</title>
        <published>2024-02-28T00:00:00+00:00</published>
        <updated>2024-02-28T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.vac.fun/posts/20240228-macbeth-and-kafka/"/>
        <id>https://blog.vac.fun/posts/20240228-macbeth-and-kafka/</id>
        
        <content type="html" xml:base="https://blog.vac.fun/posts/20240228-macbeth-and-kafka/">&lt;blockquote&gt;
&lt;p&gt;It is a tale told by an idiot, full of sound and fury, signifying nothing.&lt;&#x2F;p&gt;
&lt;p&gt;— Macbeth&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;blockquote&gt;
&lt;p&gt;There are two cardinal sins from which all others spring: Impatience and Laziness.&lt;&#x2F;p&gt;
&lt;p&gt;— Franz Kafka&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Matt Rants: BSD for Linux Users</title>
        <published>2023-12-24T00:00:00+00:00</published>
        <updated>2023-12-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.vac.fun/prism/20231224-over-yonder/"/>
        <id>https://blog.vac.fun/prism/20231224-over-yonder/</id>
        
        <content type="html" xml:base="https://blog.vac.fun/prism/20231224-over-yonder/">&lt;blockquote&gt;
&lt;p&gt;Linux, with its chaotic tinkering background, naturally appeals to a different personality, in
general, than BSD with its academic and rigorous background.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.over-yonder.net&#x2F;~fullermd&#x2F;rants&#x2F;bsd4linux&#x2F;01&quot;&gt;Link&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>MIT Technology Review: These six questions will dictate the future of generative AI</title>
        <published>2023-12-24T00:00:00+00:00</published>
        <updated>2023-12-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.vac.fun/prism/20231224-technologyreview/"/>
        <id>https://blog.vac.fun/prism/20231224-technologyreview/</id>
        
        <content type="html" xml:base="https://blog.vac.fun/prism/20231224-technologyreview/">&lt;blockquote&gt;
&lt;p&gt;Here’s the catch: it is impossible to know all the ways a technology will be misused until it is
used.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Will we ever mitigate the bias problem?&lt;&#x2F;li&gt;
&lt;li&gt;How will AI change the way we apply copyright?&lt;&#x2F;li&gt;
&lt;li&gt;How will it change our jobs?&lt;&#x2F;li&gt;
&lt;li&gt;What misinformation will it make possible?&lt;&#x2F;li&gt;
&lt;li&gt;Will we come to grips with its costs?&lt;&#x2F;li&gt;
&lt;li&gt;Will doomerism continue to dominate policymaking?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.technologyreview.com&#x2F;2023&#x2F;12&#x2F;19&#x2F;1084505&#x2F;generative-ai-artificial-intelligence-bias-jobs-copyright-misinformation&#x2F;&quot;&gt;Link&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Linux Journal: Remotely Wipe a Server</title>
        <published>2023-09-01T00:00:00+00:00</published>
        <updated>2023-09-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.vac.fun/prism/20230901-linuxjournal/"/>
        <id>https://blog.vac.fun/prism/20230901-linuxjournal/</id>
        
        <content type="html" xml:base="https://blog.vac.fun/prism/20230901-linuxjournal/">&lt;blockquote&gt;
&lt;p&gt;With Linux, I&#x27;ve always felt that I was limited only by my own programming and problem-solving
abilities, no matter what problem presented itself.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2e3440;color:#d8dee9;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span&gt; -i
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;dev&#x2F;shm
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;shred&lt;&#x2F;span&gt;&lt;span&gt; -n2 -z -v &#x2F;dev&#x2F;vda
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;echo&lt;&#x2F;span&gt;&lt;span&gt; 1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#81a1c1;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;proc&#x2F;sys&#x2F;kernel&#x2F;sysrq
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;echo&lt;&#x2F;span&gt;&lt;span&gt; o &lt;&#x2F;span&gt;&lt;span style=&quot;color:#81a1c1;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; &#x2F;proc&#x2F;sysrq-trigger
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.linuxjournal.com&#x2F;content&#x2F;remotely-wipe-server&quot;&gt;Link&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Gruntwork Blog: The future of Terraform must be open</title>
        <published>2023-08-16T00:00:00+00:00</published>
        <updated>2023-08-16T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.vac.fun/prism/20230816-gruntwork/"/>
        <id>https://blog.vac.fun/prism/20230816-gruntwork/</id>
        
        <content type="html" xml:base="https://blog.vac.fun/prism/20230816-gruntwork/">&lt;blockquote&gt;
&lt;p&gt;the BSL license is a poison pill for Terraform which threatens the entire community and ecosystem&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;We believe that the essential building blocks of the modern Internet—tools such as Linux,
Kubernetes, and Terraform—must be truly open source. That is the only way to ensure that we are
building our industry on top of solid and predictable underpinnings.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.gruntwork.io&#x2F;the-future-of-terraform-must-be-open-ab0b9ba65bca&quot;&gt;Link&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Bram Moolenaar :h 42</title>
        <published>2023-08-05T00:00:00+00:00</published>
        <updated>2023-08-05T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.vac.fun/posts/20230805-bram-moolenaar/"/>
        <id>https://blog.vac.fun/posts/20230805-bram-moolenaar/</id>
        
        <content type="html" xml:base="https://blog.vac.fun/posts/20230805-bram-moolenaar/">&lt;p&gt;R.I.P.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2e3440;color:#d8dee9;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#88c0d0;&quot;&gt;vim&lt;&#x2F;span&gt;&lt;span&gt; -c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;:h 42&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;What is the meaning of life, the universe and everything?  42&lt;&#x2F;p&gt;
&lt;p&gt;Douglas Adams, the only person who knew what this question really was about is
now dead, unfortunately.  So now you might wonder what the meaning of death
is...&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;bram_moolenaar_in_2007.jpg&quot; alt=&quot;Bram Moolenaar in 2007&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Help poor children in Uganda!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;vim_drill_big.jpg&quot; alt=&quot;Vim Drill&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>mahesh&#x27;s blog: What we talk about when we talk about System Design</title>
        <published>2023-07-23T00:00:00+00:00</published>
        <updated>2023-07-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.vac.fun/prism/20230723-mahesh/"/>
        <id>https://blog.vac.fun/prism/20230723-mahesh/</id>
        
        <content type="html" xml:base="https://blog.vac.fun/prism/20230723-mahesh/">&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Late-bind on designs&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;The goal of the design process is not to generate a single point solution, but to instead
characterize the design space for a given problem: a single point should then fall naturally out
of that space given the problem constraints. Converging early on a single design is harmful; the
team should have the ability to jump from one part of the space to another right until a solution
is picked.&lt;&#x2F;p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Each point solution is a DoS attack on the design process&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Talking about individual designs in isolation slows down design. Talking about designs in the
context of the design space accelerates design. New designs should be described in terms of the
design space, so you can immediately convey their relative position compared to other point
solutions.&lt;&#x2F;p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Think in parallel; Design together; Implement in parallel; Review together&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Certain parts of the design and development process are creative and should be parallelized &#x2F;
sharded, while others require discipline and should be centralized &#x2F; broadcast.&lt;&#x2F;p&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Talk about the problem, not existing systems&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;Solution Complexity » Problem Complexity&lt;&#x2F;li&gt;
&lt;li&gt;Solution Bias&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Always talk about a second application&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Practically, even if you are implementing only one app, it helps to always consider a second app
(or even implement one in tests); to prevent application specifics from leaking into the
abstraction.&lt;&#x2F;p&gt;
&lt;ol start=&quot;6&quot;&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;For each abstraction, build one implementation; plan for a second; hope for a third&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;In the opposite direction, you don’t want the abstraction’s semantics to rely on its
implementation details. One way to ensure this is to talk about multiple implementations in the
design process.&lt;&#x2F;p&gt;
&lt;ol start=&quot;7&quot;&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Abstraction is not free&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Abstraction is a balancing act between two types of complexity: the complexity of concreteness and
the complexity of abstractness. Each time you add a layer of abstraction, have a precise
characterization for why it has to exist, as well as the division of functionality between this
layer and the ones around it.&lt;&#x2F;p&gt;
&lt;ol start=&quot;8&quot;&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Be critical (but about the right things)&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;One way to approach design is to continually de-risk the pieces that are truly unknown; while
deferring work on the pieces that are difficult but known. (In the opposite direction, researchers
need to be more focused on details and practicality, but this happens naturally in an industry
environment).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;maheshba.bitbucket.io&#x2F;blog&#x2F;2023&#x2F;07&#x2F;12&#x2F;Design.html&quot;&gt;Link&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Linux Journal: Understanding Bash: Elements of Programming</title>
        <published>2023-05-30T00:00:00+00:00</published>
        <updated>2023-05-30T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.vac.fun/prism/20230530-linuxjournal/"/>
        <id>https://blog.vac.fun/prism/20230530-linuxjournal/</id>
        
        <content type="html" xml:base="https://blog.vac.fun/prism/20230530-linuxjournal/">&lt;blockquote&gt;
&lt;p&gt;Although Bash is primarily a command interpreter, it&#x27;s also a programming language. Bash supports
variables, functions and has control flow constructs, such as conditional statements and loops.
However, all of this comes with some unusual quirks. This is because Bash attempts to fulfill two
roles at the same time: to be a command interpreter and a programming language—and there is
tension between the two.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.linuxjournal.com&#x2F;content&#x2F;understanding-bash-elements-programming&quot;&gt;Link&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>LWN: The shrinking role of semaphores</title>
        <published>2023-04-20T00:00:00+00:00</published>
        <updated>2023-04-20T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.vac.fun/prism/20230420-lwn/"/>
        <id>https://blog.vac.fun/prism/20230420-lwn/</id>
        
        <content type="html" xml:base="https://blog.vac.fun/prism/20230420-lwn/">&lt;blockquote&gt;
&lt;p&gt;a &lt;em&gt;classic&lt;&#x2F;em&gt; concurrency limiter&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;It just goes to show that in the kernel, as elsewhere, old code can persist for a long time.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lwn.net&#x2F;Articles&#x2F;928026&#x2F;&quot;&gt;Link&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>新年快乐</title>
        <published>2023-01-10T00:00:00+00:00</published>
        <updated>2023-01-10T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.vac.fun/posts/20230110-happy-new-year/"/>
        <id>https://blog.vac.fun/posts/20230110-happy-new-year/</id>
        
        <content type="html" xml:base="https://blog.vac.fun/posts/20230110-happy-new-year/">&lt;blockquote&gt;
&lt;p&gt;Study hard what interests you the most in the most undisciplined, irreverent and original manner
possible.&lt;&#x2F;p&gt;
&lt;p&gt;— Richard Feynmann&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Honeycomb Blog: The Future of Ops Is Platform Engineering</title>
        <published>2022-10-08T00:00:00+00:00</published>
        <updated>2022-10-08T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.vac.fun/prism/20221008-honeycomb/"/>
        <id>https://blog.vac.fun/prism/20221008-honeycomb/</id>
        
        <content type="html" xml:base="https://blog.vac.fun/prism/20221008-honeycomb/">&lt;blockquote&gt;
&lt;p&gt;Building infrastructure and operational expertise used to be bundled together into a single role.
But the industry is now bifurcating along an infrastructure fault line, and the overlap between
infrastructure-oriented engineers and operationally-minded engineers is swiftly eroding. Engineers
who love this work increasingly have a choice to make. Either you can 1) go deep on infrastructure
by joining a company that does infrastructure as a service, or 2) go broad on operability by
joining a company to help them do as little infrastructure as possible.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Our systems are only getting more complex, more difficult to operate, and simultaneously more
critical to life on earth, which means that operational excellence has never been more desperately
needed (and if you don’t respect that, 🌈 you deserve to suffer 🌈).&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Developer cycles are the scarcest resource in your company, and you want to spend as many of those
as possible on your core product: the crown jewel, the code that makes you a business. Money is
cheaper than engineering cycles, and teams that are focused on their core business will always
outperform teams whose focus is spread across dozens of non-revenue-generating projects. Let
someone else build and run all the dependencies and adjacencies.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;platform-engineering-is-what-stands-between-you-and-darkness&quot;&gt;Platform engineering is what stands between you and darkness&lt;&#x2F;h2&gt;
&lt;p&gt;When you start talking about putting software engineers on call for their own code, and generally
being more involved in production, some percentage of the time you will hear back a guttural wail
of despair: &lt;em&gt;&quot;You can&#x27;t expect me to know EVERYTHING about EVERYTHING!&quot;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Quite right; we can’t. Platform engineering teams are part of the answer to this perfectly
reasonable complaint. It’s not that you’re being asked to do or understand more &lt;em&gt;in toto&lt;&#x2F;em&gt;, but the
distribution of labor and responsibility is shifting:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Before&lt;&#x2F;strong&gt;: some engineers wrote code, and some engineers ran code.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Now&lt;&#x2F;strong&gt;: all engineers write code, and all engineers run the code they write—but we divide the areas
of responsibility by layer or function.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;One of the key principles of any developer platform is that &lt;em&gt;it should be easy to do the right
things, and hard to do the wrong things&lt;&#x2F;em&gt;. It should be much simpler and easier to use the blessed
paths than anything else, and there should be friction if you go off the beaten path.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;strong&gt;A strong platform team has an equally deep grounding in operations experience and software
development.&lt;&#x2F;strong&gt; Individuals who are experts in both areas are fairly rare, but you can pull together
a strong, well-rounded &lt;em&gt;team&lt;&#x2F;em&gt; by assembling a mix of SWEs (with some ops experience) and ops or
DevOps engineers (with some software experience) and having them learn and grow from each other.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Platform teams typically work higher up the stack than operations, DevOps, or SRE teams do, and
they involve a great deal less infrastructure.&lt;&#x2F;p&gt;
&lt;p&gt;If a company has both a DevOps team and SRE, typically I expect to see the SRE team more on the
frontlines, involved with incidents, telemetry, etc., and DevOps teams more on the backburner,
slinging pipes and plumbing.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That team should write libraries, generate examples, and drive standardization; ushering in
consistency, predictability, and usability. They should partner with internal teams to evaluate
use cases. They should partner with your vendors as roadmap stakeholders. They might also write
glue code and helper modules to connect disparate data sources and create cohesive visualizations.
Basically, that team becomes an integration point between your organization and the outsourced
work.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.honeycomb.io&#x2F;blog&#x2F;future-ops-platform-engineering&quot;&gt;Link&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
